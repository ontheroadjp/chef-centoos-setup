#!/bin/bash
#
# [http://oxynotes.com/?p=6401](http://oxynotes.com/?p=6401)
#
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# iptables 停止して設定内容を全削除
/etc/rc.d/init.d/iptables stop
iptables -F
 
##############################################################
######                  ポリシーの設定                  ######
##############################################################

iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP
 
##############################################################
######                  クラック対策                    ######
##############################################################

# IP Spoofing 対策
iptables -A INPUT -i eth0 -s 127.0.0.1/8 -j DROP
iptables -A INPUT -i eth0 -s 10.0.0.0/8 -j DROP
iptables -A INPUT -i eth0 -s 172.16.0.0/12 -j DROP
iptables -A INPUT -i eth0 -s 192.168.0.0/16 -j DROP
iptables -A INPUT -i eth0 -s 192.168.0.0/24  -j DROP
 
# Ping攻撃対策 + Ping Flood 対策
iptables -N PING_ATTACK
iptables -A PING_ATTACK -m length --length :85 -m limit --limit 1/s --limit-burst 4 -j ACCEPT
iptables -A PING_ATTACK -j LOG --log-prefix "[IPTABLES PINGATTACK] : " --log-level=debug
iptables -A PING_ATTACK -j DROP
iptables -A INPUT -p icmp --icmp-type 8 -j PING_ATTACK
 
# Smurf 対策 + 不要ログ破棄
iptables -A INPUT -d 255.255.255.255 -j DROP
iptables -A INPUT -d 224.0.0.1 -j DROP
# iptables -A INPUT -d 192.168.0.255 -j DROP 
iptables -A INPUT -d 160.16.229.255 -j DROP # for Sakura VPS
 
# Smurf 対策
sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1 > /dev/null
sed -i '/# Disable Broadcast Ping/d' /etc/sysctl.conf
sed -i '/net.ipv4.icmp_echo_ignore_broadcasts/d' /etc/sysctl.conf
echo "# Disable Broadcast Ping" >> /etc/sysctl.conf
echo "net.ipv4.icmp_echo_ignore_broadcasts=1" >> /etc/sysctl.conf
 
# SYN flood 対策（SYN cookies の有効化）
sysctl -w net.ipv4.tcp_syncookies=1 > /dev/null
sed -i '/# Enable SYN Cookie/d' /etc/sysctl.conf
sed -i '/net.ipv4.tcp_syncookies/d' /etc/sysctl.conf
echo "# Enable SYN Cookie" >> /etc/sysctl.conf
echo "net.ipv4.tcp_syncookies=1" >> /etc/sysctl.conf
 
# Auth/IDENT用の113番ポートは拒否
iptables -A INPUT -p tcp --dport 113 -i eth0 -j REJECT --reject-with tcp-reset
 
# 拒否IPリストに記載されたIPを拒否する
if [ -s /root/deny_ip ]; then
    for ip in `cat /root/deny_ip`
    do
        iptables -I INPUT -s $ip -j DROP
    done
fi
 
# 特定の国からのアクセスを許可する
#if [ -s /tmp/iplist ]; then
#     iptables -N ACCEPT_JP_FILTER
#     sed -n 's/^JP\t//p' /tmp/iplist | while read address;
#     do
#          iptables -A ACCEPT_JP_FILTER -s $address -j ACCEPT
#     done
#fi
 
# 特定の国からのアクセスを拒否する
#if [ -s /tmp/iplist ]; then
#     iptables -N DROP_COUNTRY_FILTER
#     sed -n 's/^\(CN\|IN\|EG\|PK\)\t//p' /tmp/iplist | while read address;
#     do
#          iptables -A DROP_COUNTRY_FILTER -s $address -j DROP
#     done
#     iptables -A INPUT -j DROP_COUNTRY_FILTER
#fi
 
# ステートフル・パケットインスペクション対応（正しいTCPと既に許可された接続を許可
iptables -A INPUT -p tcp ! --tcp-flags SYN,RST,ACK SYN -m state --state NEW -j DROP
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
 
##############################################################
###### ここから個別のサービスで利用するポートを開放する ######
##############################################################


# lo（ループバックインターフェース）の許可
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
 
# SSH（日本からのみ許可 & ハッシュリミット）
#iptables -A INPUT -p tcp -m state --state NEW --dport 22 -m hashlimit --hashlimit-burst 10 --hashlimit 1/h --hashlimit-mode srcip --hashlimit-htable-expire 3600000 --hashlimit-name ssh-limit -j ACCEPT_JP_FILTER
 
# SSH（国制限 & ハッシュリミットなし）
iptables -A INPUT -p tcp -m state --state NEW --dport 10022 -j ACCEPT
iptables -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT

# HTTP
# iptables -A INPUT -p tcp -m state --state NEW --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 80 -j ACCEPT

# DNS - DDpS（DNS Amp）は適宜ログを取る
iptables -N DNSAMP
iptables -A DNSAMP -m recent --name dnsamp --set
iptables -A DNSAMP -m recent --name dnsamp --rcheck --seconds 60 --hitcount 5 -j LOG --log-prefix "[IPTABLES DNSAMP] : " --log-level=debug
iptables -A DNSAMP -m recent --name dnsamp --rcheck --seconds 60 --hitcount 5 -j DROP
iptables -A DNSAMP -j ACCEPT
iptables -A INPUT -p udp -m state --state NEW --dport 53 -i eth0 -j DNSAMP
iptables -A INPUT -p tcp -m state --state NEW --dport 53 -j ACCEPT

# ---------------

# 80	: HTTP
# 483	: HTTPS(http protocol over TLS/SSL) 
# 25	: SMTP
# 465	: SMTPs
# 587	: SMTP（Submission port）
# 110	: POP3
# 995	: POP3s(imap4 over TLS/SSL)
# 143	: IMAP4
# 993	: IMAP4s(pop3 over TLS/SSL)


for port in 80
do
	if [ $port -eq 80 ]; then
		iptables -A INPUT -p tcp --dport ${port} -j ACCEPT
	else 
		iptables -A INPUT -p tcp -m state --state NEW --dport ${port} -j ACCEPT
	fi
done

# SMTPs
#iptables -A INPUT -p tcp -m state --state NEW --dport 465 -j ACCEPT
 
# IMAP4s(pop3 over TLS/SSL)
#iptables -A INPUT -p tcp -m state --state NEW --dport 993 -j ACCEPT
 
# POP3s(imap4 over TLS/SSL)
#iptables -A INPUT -p tcp -m state --state NEW --dport 995 -j ACCEPT
 
# SMTP
#iptables -A INPUT -p tcp -m state --state NEW --dport 25 -j ACCEPT
 
# SMTP（Submission port）
#iptables -A INPUT -p tcp -m state --state NEW --dport 587 -j ACCEPT
 
# HTTPS(http protocol over TLS/SSL) 
#iptables -A INPUT -p tcp -m state --state NEW --dport 443 -j ACCEPT

# ---------------
 
# webmin用のポートを許可（日本からのみ）
#iptables -A INPUT -p tcp -m state --state NEW --dport 10022 -j ACCEPT_JP_FILTER
#iptables -A INPUT -p udp -m state --state NEW --dport 10022 -j ACCEPT_JP_FILTER
 
# 上記の条件に当てはまらない通信を記録して破棄
iptables -A INPUT -m limit --limit 1/s -j LOG --log-prefix "[IPTABLES DROP INPUT] : " --log-level=debug
iptables -A INPUT -j DROP

iptables -A FORWARD -m limit --limit 1/s -j LOG --log-prefix "[IPTABLES DROP FORWARD] : " --log-level=debug
iptables -A FORWARD -j DROP

# 設定を保存してiptablesを起動
/etc/rc.d/init.d/iptables save
/etc/rc.d/init.d/iptables start

